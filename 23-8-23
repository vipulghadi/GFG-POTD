----------------------------------------------------------------------------------------------------------------
 bool solve(int i,int j,int addx,int addy,int k,string &word,vector<vector<char>>&grid,int n,int m,vector<vector<int>>&ans)
    {   if(k==word.size())return true;
        if(i<0||i>=n||j<0||j>=m||grid[i][j]!=word[k])return false;
        return solve(i+addx,j+addy,addx,addy,k+1,word,grid,n,m,ans);
    }
	vector<vector<int>>searchWord(vector<vector<char>>grid, string word){
	    vector<vector<int>>ans;
	    int n=grid.size();
	    int m=grid[0].size();
	    int  x[]={-1,0,1,0,-1,1,1,-1};
	    int  y[]={0,1,0,-1,1,1,-1,-1,};
	    for(int i=0;i<n;i++){
	        for(int j=0;j<m;j++){
	            if(word[0]==grid[i][j]){
	               for(int k=0;k<8;k++){
	                   if(solve(i+x[k],j+y[k],x[k],y[k],1,word,grid,n,m,ans)){
	                       ans.push_back({i,j});
	                       break;
	                   }
	               }
	            }
	        }
	    }
	    return ans;
	}
 ------------------------------------------------------------------------------------------------------
